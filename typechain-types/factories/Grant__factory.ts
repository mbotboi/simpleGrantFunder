/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Grant, GrantInterface } from "../Grant";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_grantId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ClaimGrant",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Fund",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RemoveFund",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptedToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "blockTs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimGrant",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "fundGrant",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "funderAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "grant",
    outputs: [
      {
        internalType: "uint256",
        name: "grantId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "grantId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "removeFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unlocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620014d4380380620014d48339818101604052810190620000379190620001e5565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550846000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060405180608001604052808581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281525060026000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301559050505050505050620002d9565b600081519050620001c881620002a5565b92915050565b600081519050620001df81620002bf565b92915050565b600080600080600060a08688031215620001fe57600080fd5b60006200020e88828901620001b7565b95505060206200022188828901620001ce565b94505060406200023488828901620001b7565b93505060606200024788828901620001b7565b92505060806200025a88828901620001ce565b9150509295509295909350565b600062000274826200027b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620002b08162000267565b8114620002bc57600080fd5b50565b620002ca816200029b565b8114620002d657600080fd5b50565b6111eb80620002e96000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c806366d003ac11610081578063af5e73a41161005b578063af5e73a4146101d2578063b69ef8a814610202578063f30c0e0814610220576100d4565b806366d003ac146101785780636a5e265014610196578063ac27e06e146101b4576100d4565b80633f211858116100b25780633f21185814610134578063451c3d80146101505780635d22e77c1461016e576100d4565b8063251c1aa3146100d957806330c3eaa8146100f75780633af388e014610118575b600080fd5b6100e161023e565b6040516100ee9190610ffe565b60405180910390f35b6100ff61024b565b60405161010f9493929190611019565b60405180910390f35b610132600480360381019061012d9190610c83565b6102a9565b005b61014e60048036038101906101499190610c83565b6104b7565b005b610158610643565b6040516101659190610ea8565b60405180910390f35b61017661066f565b005b610180610ac1565b60405161018d9190610ea8565b60405180910390f35b61019e610aee565b6040516101ab9190610f23565b60405180910390f35b6101bc610afe565b6040516101c99190610ffe565b60405180910390f35b6101ec60048036038101906101e79190610c31565b610b06565b6040516101f99190610ffe565b60405180910390f35b61020a610b1e565b6040516102179190610ffe565b60405180910390f35b610228610bd0565b6040516102359190610ffe565b60405180910390f35b6000600260030154905090565b60028060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154905084565b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561032b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032290610fbe565b60405180910390fd5b610333610aee565b15610373576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036a90610f9e565b60405180910390fd5b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103c291906110c5565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b815260040161042893929190610ec3565b602060405180830381600087803b15801561044257600080fd5b505af1158015610456573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047a9190610c5a565b507f0e31f6229e6d14557a66e8bf401a6aa9940fe5ceaa1b64d9b566629a2219083933826040516104ac929190610efa565b60405180910390a150565b6104bf610aee565b156104ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f690610f5e565b60405180910390fd5b80600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461054e919061106f565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016105b493929190610ec3565b602060405180830381600087803b1580156105ce57600080fd5b505af11580156105e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106069190610c5a565b507fda8220a878ff7a89474ccffdaa31ea1ed1ffbb0207d5051afccc4fbaf81f9bcd3382604051610638929190610efa565b60405180910390a150565b60006002800160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610677610aee565b6106b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ad90610f7e565b60405180910390fd5b600260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610749576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074090610fde565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107a69190610ea8565b60206040518083038186803b1580156107be57600080fd5b505afa1580156107d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f69190610cac565b11610836576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d90610f3e565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd30600260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108f69190610ea8565b60206040518083038186803b15801561090e57600080fd5b505afa158015610922573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109469190610cac565b6040518463ffffffff1660e01b815260040161096493929190610ec3565b602060405180830381600087803b15801561097e57600080fd5b505af1158015610992573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b69190610c5a565b507f922d5502f74416c771a5c8c5ec7ce90fd763844aafffe40019f80da5b7b62580600260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a599190610ea8565b60206040518083038186803b158015610a7157600080fd5b505afa158015610a85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa99190610cac565b604051610ab7929190610efa565b60405180910390a1565b6000600260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000426002600301541115905090565b600042905090565b60066020528060005260406000206000915090505481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b7b9190610ea8565b60206040518083038186803b158015610b9357600080fd5b505afa158015610ba7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bcb9190610cac565b905090565b6000600260000154905090565b600081359050610bec81611170565b92915050565b600081519050610c0181611187565b92915050565b600081359050610c168161119e565b92915050565b600081519050610c2b8161119e565b92915050565b600060208284031215610c4357600080fd5b6000610c5184828501610bdd565b91505092915050565b600060208284031215610c6c57600080fd5b6000610c7a84828501610bf2565b91505092915050565b600060208284031215610c9557600080fd5b6000610ca384828501610c07565b91505092915050565b600060208284031215610cbe57600080fd5b6000610ccc84828501610c1c565b91505092915050565b610cde816110f9565b82525050565b610ced8161110b565b82525050565b6000610d0060128361105e565b91507f4e6f20746f6b656e7320746f20636c61696d00000000000000000000000000006000830152602082019050919050565b6000610d40601c8361105e565b91507f6772616e742066756e64696e6720706572696f64206973206f766572000000006000830152602082019050919050565b6000610d8060238361105e565b91507f6772616e7420636c61696d20706572696f64206e6f742079657420657863656560008301527f64656400000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610de660198361105e565b91507f63616e6e6f742077697468647261772066756e6473206e6f77000000000000006000830152602082019050919050565b6000610e26601e8361105e565b91507f6e6f7420656e6f7567682062616c616e636520746f20776974686472617700006000830152602082019050919050565b6000610e6660198361105e565b91507f796f7520617265206e6f742074686520726563697069656e74000000000000006000830152602082019050919050565b610ea281611137565b82525050565b6000602082019050610ebd6000830184610cd5565b92915050565b6000606082019050610ed86000830186610cd5565b610ee56020830185610cd5565b610ef26040830184610e99565b949350505050565b6000604082019050610f0f6000830185610cd5565b610f1c6020830184610e99565b9392505050565b6000602082019050610f386000830184610ce4565b92915050565b60006020820190508181036000830152610f5781610cf3565b9050919050565b60006020820190508181036000830152610f7781610d33565b9050919050565b60006020820190508181036000830152610f9781610d73565b9050919050565b60006020820190508181036000830152610fb781610dd9565b9050919050565b60006020820190508181036000830152610fd781610e19565b9050919050565b60006020820190508181036000830152610ff781610e59565b9050919050565b60006020820190506110136000830184610e99565b92915050565b600060808201905061102e6000830187610e99565b61103b6020830186610cd5565b6110486040830185610cd5565b6110556060830184610e99565b95945050505050565b600082825260208201905092915050565b600061107a82611137565b915061108583611137565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110ba576110b9611141565b5b828201905092915050565b60006110d082611137565b91506110db83611137565b9250828210156110ee576110ed611141565b5b828203905092915050565b600061110482611117565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b611179816110f9565b811461118457600080fd5b50565b6111908161110b565b811461119b57600080fd5b50565b6111a781611137565b81146111b257600080fd5b5056fea2646970667358221220c88f1a72647831caf257240fd276bfc47c074bad208595c88e5bfe11953c878e64736f6c63430008000033";

type GrantConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GrantConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Grant__factory extends ContractFactory {
  constructor(...args: GrantConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    _grantId: PromiseOrValue<BigNumberish>,
    _recipient: PromiseOrValue<string>,
    _tokenAddress: PromiseOrValue<string>,
    _timestamp: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Grant> {
    return super.deploy(
      _owner,
      _grantId,
      _recipient,
      _tokenAddress,
      _timestamp,
      overrides || {}
    ) as Promise<Grant>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    _grantId: PromiseOrValue<BigNumberish>,
    _recipient: PromiseOrValue<string>,
    _tokenAddress: PromiseOrValue<string>,
    _timestamp: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _owner,
      _grantId,
      _recipient,
      _tokenAddress,
      _timestamp,
      overrides || {}
    );
  }
  override attach(address: string): Grant {
    return super.attach(address) as Grant;
  }
  override connect(signer: Signer): Grant__factory {
    return super.connect(signer) as Grant__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GrantInterface {
    return new utils.Interface(_abi) as GrantInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Grant {
    return new Contract(address, _abi, signerOrProvider) as Grant;
  }
}
