/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { ERC20, ERC20Interface } from "../../contracts/ERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000a1538038062000a158339810160408190526200003491620001fd565b815162000049906000906020850190620000ac565b5080516200005f906001906020840190620000ac565b50506002805460ff191660121790555060046020526000197f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec8190553060009081526040902055620002b7565b828054620000ba9062000264565b90600052602060002090601f016020900481019282620000de576000855562000129565b82601f10620000f957805160ff191683800117855562000129565b8280016001018555821562000129579182015b82811115620001295782518255916020019190600101906200010c565b50620001379291506200013b565b5090565b5b808211156200013757600081556001016200013c565b600082601f83011262000163578081fd5b81516001600160401b0380821115620001805762000180620002a1565b6040516020601f8401601f1916820181018381118382101715620001a857620001a8620002a1565b6040528382528584018101871015620001bf578485fd5b8492505b83831015620001e25785830181015182840182015291820191620001c3565b83831115620001f357848185840101525b5095945050505050565b6000806040838503121562000210578182fd5b82516001600160401b038082111562000227578384fd5b620002358683870162000152565b935060208501519150808211156200024b578283fd5b506200025a8582860162000152565b9150509250929050565b6002810460018216806200027957607f821691505b602082108114156200029b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61074e80620002c76000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806340c10f191161006657806340c10f191461011e57806370a082311461013357806395d89b4114610146578063a9059cbb1461014e578063dd62ed3e146101615761009e565b806306fdde03146100a3578063095ea7b3146100c157806318160ddd146100e157806323b872dd146100f6578063313ce56714610109575b600080fd5b6100ab610174565b6040516100b891906105c0565b60405180910390f35b6100d46100cf36600461058c565b610202565b6040516100b891906105b5565b6100e961026c565b6040516100b89190610681565b6100d4610104366004610551565b610272565b6101116103e1565b6040516100b8919061068a565b61013161012c36600461058c565b6103ea565b005b6100e9610141366004610505565b6103f8565b6100ab61040a565b6100d461015c36600461058c565b610417565b6100e961016f36600461051f565b61042b565b60008054610181906106c7565b80601f01602080910402602001604051908101604052809291908181526020018280546101ad906106c7565b80156101fa5780601f106101cf576101008083540402835291602001916101fa565b820191906000526020600020905b8154815290600101906020018083116101dd57829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061025b908690610681565b60405180910390a350600192915050565b60035481565b6001600160a01b038316600090815260046020526040812054828110156102b45760405162461bcd60e51b81526004016102ab9061064a565b60405180910390fd5b6001600160a01b0385163314610342576001600160a01b0385166000908152600560209081526040808320338452909152902054600019811461034057838110156103115760405162461bcd60e51b81526004016102ab90610613565b61031b84826106b0565b6001600160a01b03871660009081526005602090815260408083203384529091529020555b505b61034c83826106b0565b6001600160a01b03808716600090815260046020526040808220939093559086168152205461037c908490610698565b6001600160a01b0380861660008181526004602052604090819020939093559151908716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906103ce908790610681565b60405180910390a3506001949350505050565b60025460ff1681565b6103f48282610448565b5050565b60046020526000908152604090205481565b60018054610181906106c7565b6000610424338484610272565b9392505050565b600560209081526000928352604080842090915290825290205481565b6001600160a01b03821660009081526004602052604090205461046c908290610698565b6001600160a01b0383166000908152600460205260408120919091556003805483929061049a908490610698565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104dd908590610681565b60405180910390a35050565b80356001600160a01b038116811461050057600080fd5b919050565b600060208284031215610516578081fd5b610424826104e9565b60008060408385031215610531578081fd5b61053a836104e9565b9150610548602084016104e9565b90509250929050565b600080600060608486031215610565578081fd5b61056e846104e9565b925061057c602085016104e9565b9150604084013590509250925092565b6000806040838503121561059e578182fd5b6105a7836104e9565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b818110156105ec578581018301518582016040015282016105d0565b818111156105fd5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252601d908201527f45524332303a20696e73756666696369656e742d616c6c6f77616e6365000000604082015260600190565b6020808252601b908201527f45524332303a20696e73756666696369656e742d62616c616e63650000000000604082015260600190565b90815260200190565b60ff91909116815260200190565b600082198211156106ab576106ab610702565b500190565b6000828210156106c2576106c2610702565b500390565b6002810460018216806106db57607f821691505b602082108114156106fc57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212202c6f45c05d00d969052cd5ca8d00c5f1f7e9127562ae26f01f6dcc2891c10fa264736f6c63430008000033";

type ERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20__factory extends ContractFactory {
  constructor(...args: ERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC20>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC20 {
    return super.attach(address) as ERC20;
  }
  override connect(signer: Signer): ERC20__factory {
    return super.connect(signer) as ERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20Interface {
    return new utils.Interface(_abi) as ERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {
    return new Contract(address, _abi, signerOrProvider) as ERC20;
  }
}
